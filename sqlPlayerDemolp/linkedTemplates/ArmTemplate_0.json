{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "sqlPlayerDemolp"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureBlobStorage2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage2'"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://pvlab6f1fcdadls.dfs.core.windows.net/"
		},
		"trigger_schedule_properties_CopySQLDemo_parameters_ServerName": {
			"type": "string",
			"defaultValue": "pvlab-6f1fcd-sqlsvr.database.windows.net"
		},
		"trigger_schedule_properties_CopySQLDemo_parameters_dbName": {
			"type": "string",
			"defaultValue": "pvlab-6f1fcd-sqldb"
		},
		"trigger_schedule_properties_CopySQLDemo_parameters_TableName": {
			"type": "string",
			"defaultValue": "dbo.twitter"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"serverName": {
						"type": "string"
					},
					"dbName": {
						"type": "string"
					},
					"tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_Tumblingwindow')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 30,
						"startTime": "2023-10-22T10:10:00",
						"endTime": "2023-10-23T23:00:00",
						"timeZone": "Eastern Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference",
					"parameters": {
						"serverName": {
							"value": "@dataset().ServerNamefromdataset\r\n",
							"type": "Expression"
						},
						"dbName": {
							"value": "@dataset().dbNamefromdataset",
							"type": "Expression"
						},
						"tablename": {
							"value": "@dataset().TableName",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"ServerNamefromdataset": {
						"type": "String"
					},
					"dbNamefromdataset": {
						"type": "String"
					},
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "column_1",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Twitter"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "twitter_handles.parquet",
						"folderPath": "Twitter",
						"container": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "Rank",
						"type": "INT64"
					},
					{
						"name": "Change",
						"type": "UTF8"
					},
					{
						"name": "Account name",
						"type": "UTF8"
					},
					{
						"name": "Owner",
						"type": "UTF8"
					},
					{
						"name": "Followers",
						"type": "INT64"
					},
					{
						"name": "Activity",
						"type": "UTF8"
					},
					{
						"name": "Country",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyFromSourcetoTarget')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyFromCustomerSourcetoTarget",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Rank",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Rank",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Change",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Change",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AccountName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Owner",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Owner",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Followers",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Followers",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Activity",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Country",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Country",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {
									"ServerNamefromdataset": {
										"value": "@pipeline().parameters.ServerName",
										"type": "Expression"
									},
									"dbNamefromdataset": {
										"value": "@pipeline().parameters.DbName",
										"type": "Expression"
									},
									"TableName": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {
									"ServerNamefromdataset": {
										"value": "@pipeline().parameters.ServerName",
										"type": "Expression"
									},
									"dbNamefromdataset": {
										"value": "@pipeline().parameters.DbName",
										"type": "Expression"
									},
									"TableName": {
										"value": "@pipeline().parameters.TargetTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTable": {
						"type": "string"
					},
					"ServerName": {
						"type": "string"
					},
					"DbName": {
						"type": "string"
					},
					"TargetTable": {
						"type": "string"
					}
				},
				"variables": {
					"ServerName": {
						"type": "String",
						"defaultValue": "pvlab-6f1fcd-sqlsvr.database.windows.net"
					},
					"DbName": {
						"type": "String",
						"defaultValue": "pvlab-6f1fcd-sqldb"
					},
					"SourceTable": {
						"type": "String",
						"defaultValue": "SalesLT.Customer"
					},
					"TargetTable": {
						"type": "String",
						"defaultValue": "SalesLT.Customer_target1"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopySQLDemo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopySQLDemo",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Rank",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "Rank",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Change",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Change",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Account name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AccountName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Owner",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Owner",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Followers",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "Followers",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Activity",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Country",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Country",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {
									"ServerNamefromdataset": {
										"value": "@pipeline().parameters.ServerName",
										"type": "Expression"
									},
									"dbNamefromdataset": {
										"value": "@pipeline().parameters.dbName",
										"type": "Expression"
									},
									"TableName": {
										"value": "@pipeline().parameters.TableName",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ServerName": {
						"type": "String",
						"defaultValue": "pvlab-6f1fcd-sqlsvr.database.windows.net"
					},
					"dbName": {
						"type": "String",
						"defaultValue": "pvlab-6f1fcd-sqldb"
					},
					"TableName": {
						"type": "String",
						"defaultValue": "SalesLT.Customer"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Parquet1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_schedule')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CopySQLDemo",
							"type": "PipelineReference"
						},
						"parameters": {
							"ServerName": "[parameters('trigger_schedule_properties_CopySQLDemo_parameters_ServerName')]",
							"dbName": "[parameters('trigger_schedule_properties_CopySQLDemo_parameters_dbName')]",
							"TableName": "[parameters('trigger_schedule_properties_CopySQLDemo_parameters_TableName')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 1,
						"startTime": "2023-10-24T10:32:00",
						"timeZone": "Eastern Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CopySQLDemo')]"
			]
		}
	]
}